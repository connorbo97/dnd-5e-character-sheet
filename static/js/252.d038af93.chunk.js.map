{"version":3,"file":"static/js/252.d038af93.chunk.js","mappings":"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","sources":["../node_modules/@3d-dice/dice-box/src/helpers/index.js","../node_modules/@3d-dice/dice-box/src/components/world/canvas.js","../node_modules/@3d-dice/dice-box/src/WorldFacade.js"],"sourcesContent":["export function lerp(a, b, alpha) {\n  return a * (1 - alpha) + b * alpha;\n}\n\n/**\n * Create UUIDs \n * @return {string} Unique UUID\n */\nexport const createUUID = () => {\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c => {\n    const crypto = window.crypto || window.msCrypto\n    //eslint-disable-next-line\n    return (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  })\n}\n\nexport const recursiveSearch = (obj, searchKey, results = []) => {\n\tconst r = results;\n\tObject.keys(obj).forEach(key => {\n\t\tconst value = obj[key];\n\t\t// if(key === searchKey && typeof value !== 'object'){\n\t\tif(key === searchKey){\n\t\t\tr.push(value);\n\t\t} else if(value && typeof value === 'object'){\n\t\t\trecursiveSearch(value, searchKey, r);\n\t\t}\n\t});\n\treturn r;\n};\n\n/**\n * Debounce functions for better performance\n * (c) 2021 Chris Ferdinandi, MIT License, https://gomakethings.com\n * @param  {Function} fn The function to debounce\n */\nexport const debounce = (fn) => {\n\n\t// Setup a timer\n\tlet timeout;\n\n\t// Return a function to run debounced\n\treturn function () {\n\n\t\t// Setup the arguments\n\t\tlet context = this;\n\t\tlet args = arguments;\n\n\t\t// If there's a timer, cancel it\n\t\tif (timeout) {\n\t\t\twindow.cancelAnimationFrame(timeout);\n\t\t}\n\n\t\t// Setup the new requestAnimationFrame()\n\t\ttimeout = window.requestAnimationFrame(function () {\n\t\t\tfn.apply(context, args);\n\t\t});\n\t};\n}\n\n/**\n * Function Queue - ensures async function calls are triggered in the order they are queued\n * By David Adler (david_adler) @ https://stackoverflow.com/questions/53540348/js-async-await-tasks-queue\n * @param  {object} opts Option to dedupe concurrent executions\n * @return {object} returns object with \"push\" function, \"queue\" array, and \"flush\" function\n */\nexport const createAsyncQueue = (opts = { dedupe: false }) => {\n  const { dedupe } = opts\n  let queue = []\n  let running\n  const push = task => {\n    if (dedupe) queue = []\n    queue.push(task)\n    if (!running) running = start()\n    return running.finally(() => {\n      running = undefined\n    })\n  }\n  const start = async () => {\n    const res = []\n    while (queue.length) {\n      const item = queue.shift()\n      res.push(await item())\n    }\n    return res\n  }\n  return { push, queue, flush: () => running || Promise.resolve([]) }\n}\n\n// deep copy objects and break references to original object\n// Note: does not work with the 'scene' object or objects with circular references\nexport const deepCopy = obj => JSON.parse(JSON.stringify(obj))\n\n// Sleeper function to delay execution for testing\nexport const sleeper = (ms) => {\n  return new Promise(resolve => setTimeout(() => resolve(), ms));\n}\n\nexport class Random {\n  /**\n   * Generate a random number between 0 (inclusive) and 1 (exclusive).\n   * A drop in replacement for Math.random()\n   * @return {number}\n   */\n  static value() {\n    const crypto = window.crypto || window.msCrypto;\n    const buffer = new Uint32Array(1);\n    const int = crypto.getRandomValues(buffer)[0];\n\n    return int / 2**32\n  }\n  /**\n   * Generate a very good random number between min (inclusive) and max (exclusive) by using crypto.getRandomValues() twice.\n   * @param  {number} min\n   * @param  {number} max\n   * @return {number}\n   */\n  static range(min, max) {\n    // return Math.floor(this.value() * (max - min) + min); // plain random\n    return (Math.floor(Math.pow(10,14)*this.value()*this.value())%(max-min+1))+min // super random!\n  }\n}\n\n// https://www.30secondsofcode.org/c/js-colors/p/1\nexport const hexToRGB = hex => {\n  let alpha = false,\n    h = hex.slice(hex.startsWith('#') ? 1 : 0);\n  if (h.length === 3) h = [...h].map(x => x + x).join('');\n  else if (h.length === 8) alpha = true;\n  h = parseInt(h, 16);\n  let val = {\n    r: h >>> 16,\n    g: (h & 0x00ff00) >>> 8,\n    b: (h & 0x0000ff)\n  }\n  if(alpha) {\n    val.r = h >>> 24\n    val.g = (h & 0x00ff0000) >>> 16\n    val.b = (h & 0x0000ff00) >>> 8\n    val.a = (h & 0x000000ff)\n  }\n  return val\n\n};\n\nexport const RGBToHSB = (r, g, b) => {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const v = Math.max(r, g, b),\n    n = v - Math.min(r, g, b);\n  const h =\n    n === 0 ? 0 : n && v === r ? (g - b) / n : v === g ? 2 + (b - r) / n : 4 + (r - g) / n;\n  return [60 * (h < 0 ? h + 6 : h), v && (n / v) * 100, v * 100];\n};\n\nexport const hexToHSB = (hex) => {\n  const rgb = hexToRGB(hex)\n  return RGBToHSB(rgb.r,rgb.g,rgb.b)\n}","function createCanvas(options) {\n  const { selector, id } = options\n\n  if (!selector || typeof selector !== 'string') {\n    throw(new Error(\"You must provide a DOM selector as the first argument in order to render the Dice Box\"))\n  }\n\n  let canvas\n  const container = document.querySelector(selector)\n\n  if(!container?.nodeName){\n    throw(new Error(`DiceBox target DOM node: '${selector}' not found or not available yet. Try invoking inside a DOMContentLoaded event`))\n  }\n  \n  if(container.nodeName.toLowerCase() !== 'canvas') {\n    canvas = document.createElement('canvas')\n    canvas.id = id\n    container.appendChild(canvas)\n  } \n  else {\n    canvas = container\n  }\n  return canvas\n}\n\nexport { createCanvas }","import { createCanvas } from './components/world/canvas'\nimport physicsWorker from './components/physics.worker.js?worker&inline'\nimport { debounce, createAsyncQueue, Random, hexToRGB } from './helpers'\n\nconst defaultOptions = {\n\tid: `dice-canvas-${Date.now()}`, // set the canvas id\n  enableShadows: true, // do dice cast shadows onto DiceBox mesh?\n\tshadowTransparency: .8,\n\tlightIntensity: 1,\n  delay: 10, // delay between dice being generated - 0 causes stuttering and physics popping\n\tscale: 5, // scale the dice\n\ttheme: 'default', // can be a hex color or a pre-defined theme such as 'purpleRock'\n\tthemeColor: '#2e8555', // used for color values or named theme variants - not fully implemented yet // green: #2e8555 // yellow: #feea03\n\toffscreen: true, // use offscreen canvas browser feature for performance improvements - will fallback to false based on feature detection\n\tassetPath: '/assets/dice-box/', // path to 'ammo', 'models', 'themes' folders and web workers\n\torigin: location.origin,\n\tmeshFile: `models/default.json`,\n\tsuspendSimulation: false\n}\n\nclass WorldFacade {\n\trollCollectionData = {}\n\trollGroupData = {}\n\trollDiceData = {}\n\tthemeData = []\n\tthemesLoadedData = {}\n\t#collectionIndex = 0\n\t#groupIndex = 0\n\t#rollIndex = 0\n\t#idIndex = 0\n\t#DiceWorld = {}\n\t#diceWorldPromise\n\t#diceWorldResolve\n\t#DicePhysics\n\t#dicePhysicsPromise\n\t#dicePhysicsResolve\n\tnoop = () => {}\n\n  constructor(container, options = {}){\n\t\tif(typeof options !== 'object') {\n\t\t\tthrow new Error('Config options should be an object. Config reference: https://fantasticdice.games/docs/usage/config#configuration-options')\n\t\t}\n\t\t// pull out callback functions from options\n\t\tconst { onDieComplete, onRollComplete, onRemoveComplete, onThemeConfigLoaded, onThemeLoaded, ...boxOptions } = options\n\n\t\t// extend defaults with options\n\t\tthis.config = {...defaultOptions, ...boxOptions}\n\n\t\t// assign callback functions\n\t\tthis.onDieComplete = options.onDieComplete || this.noop\n\t\tthis.onRollComplete = options.onRollComplete || this.noop\n\t\tthis.onRemoveComplete = options.onRemoveComplete || this.noop\n\t\tthis.onThemeLoaded = options.onThemeLoaded || this.noop\n\t\tthis.onThemeConfigLoaded = options.onThemeConfigLoaded || this.noop\n\n\n\t\t// if a canvas selector is provided then that will be used for the dicebox, otherwise a canvas will be created using the config.id\n    this.canvas = createCanvas({\n      selector: container,\n      id: this.config.id\n    })\n\t\t// create a queue to prevent theme being loaded multiple times\n\t\tthis.loadThemeQueue = createAsyncQueue({dedupe: true})\n  }\n\n\t// Load the BabylonJS World\n\tasync #loadWorld(){\n\n\t\t// set up a promise to be fulfilled when a message comes back from DiceWorld indicating init is complete\n\t\tthis.#diceWorldPromise = new Promise((resolve, reject) => {\n\t\t\tthis.#diceWorldResolve = resolve\n\t\t})\n\n\t\t// resolve the promise one onInitComplete callback is triggered\n\t\tconst onInitComplete = () => {\n\t\t\tthis.#diceWorldResolve()\n\t\t}\n\n\t\tif (\"OffscreenCanvas\" in window && \"transferControlToOffscreen\" in this.canvas && this.config.offscreen) {\n\t\t\t// Ok to use offscreen canvas - transfer control offscreen\n\t\t\tconst WorldOffscreen = await import('./components/world.offscreen').then(module => module.default)\n\t\t\t// WorldOffscreen is just a container class that passes all method calls to the Offscreen Canvas worker\n\t\t\tthis.#DiceWorld = new WorldOffscreen({\n\t\t\t\tcanvas: this.canvas,\n\t\t\t\toptions: this.config,\n\t\t\t\tonInitComplete\n\t\t\t})\n\t\t} else {\n\t\t\tif(this.config.offscreen){\n\t\t\t\tconsole.warn(\"This browser does not support OffscreenCanvas. Using standard canvas fallback.\")\n\t\t\t\tthis.config.offscreen = false\n\t\t\t}\n\t\t\t// code splitting out WorldOnscreen. It's essentially the same as offscreenCanvas.worker.js but communicates with the main thread differently\n\t\t\tconst WorldOnscreen = await import('./components/world.onscreen').then(module => module.default)\n\t\t\tthis.#DiceWorld = new WorldOnscreen({\n\t\t\t\tcanvas: this.canvas,\n\t\t\t\toptions: this.config,\n\t\t\t\tonInitComplete\n\t\t\t})\n\t\t}\n\t}\n\n\t// Load the AmmoJS physics world\n\t#loadPhysics(){\n\t\t// initialize physics world in which AmmoJS runs\n\t\tthis.#DicePhysics = new physicsWorker()\n\t\t// set up a promise to be fulfilled when a message comes back from physics.worker indicating init is complete\n\t\tthis.#dicePhysicsPromise = new Promise((resolve, reject) => {\n\t\t\tthis.#dicePhysicsResolve = resolve\n\t\t})\n\t\tthis.#DicePhysics.onmessage = (e) => {\n\t\t\tswitch( e.data.action ) {\n\t\t\t\tcase \"init-complete\":\n\t\t\t\t\tthis.#dicePhysicsResolve() // fulfill promise so other things can run\n\t\t\t}\n    }\n\t\t// initialize the AmmoJS physics worker\n\t\tthis.#DicePhysics.postMessage({\n\t\t\taction: \"init\",\n\t\t\twidth: this.canvas.clientWidth,\n\t\t\theight: this.canvas.clientHeight,\n\t\t\toptions: this.config\n\t\t})\n\t}\n\n\t#connectWorld(){\n\t\tconst channel = new MessageChannel()\n\t\t\n\t\t// create message channel for the visual world and the physics world to communicate through\n\t\tthis.#DiceWorld.connect(channel.port1)\n\n\t\t// create message channel for this WorldFacade class to communicate with physics world\n\t\tthis.#DicePhysics.postMessage({\n\t\t\taction: \"connect\"\n\t\t},[ channel.port2 ])\n\t}\n\n\tresizeWorld(){\n\t\t// send resize events to workers - debounced for performance\n\t\tconst resizeWorkers = () => {\n\t\t\tthis.#DiceWorld.resize({width: this.canvas.clientWidth, height: this.canvas.clientHeight})\n\t\t\tthis.#DicePhysics.postMessage({action: \"resize\", width: this.canvas.clientWidth, height: this.canvas.clientHeight});\n\t\t}\n\t\tconst debounceResize = debounce(resizeWorkers)\n\t\twindow.addEventListener(\"resize\", debounceResize)\n\t}\n\n  async init() {\n\t\t// trigger physics first so it can load in parallel with world\n\t\tthis.#loadPhysics()\n\t\tawait this.#loadWorld()\n\t\tthis.resizeWorld()\n\n\t\t// now that DiceWorld is ready we can attach our callbacks\n\t\tthis.#DiceWorld.onRollResult = (result) => {\n\t\t\tconst die = this.rollDiceData[result.rollId]\n\t\t\tconst group = this.rollGroupData[die.groupId]\n\t\t\tconst collection = this.rollCollectionData[die.collectionId]\n\n\t\t\t// map die results back to our rollData\n\t\t\t// since all rolls are references to this.rollDiceDate the values will be added to those objects\n\t\t\tgroup.rolls[die.rollId].value = result.value\n\n\t\t\t// increment the completed roll count for this group\n\t\t\tcollection.completedRolls++\n\t\t\t// if all rolls are completed then resolve the collection promise - returning dice that were in this collection\n\t\t\tif(collection.completedRolls == collection.rolls.length) {\n\t\t\t\t// pull out roll.collectionId and roll.id? They're meant to be internal values\n\t\t\t\tcollection.resolve(Object.values(collection.rolls).map(({collectionId, id, meshName, ...rest}) => rest))\n\t\t\t}\n\n\t\t\t// trigger callback passing individual die result\n\t\t\tconst {collectionId, id, ...returnDie} = die\n\t\t\tthis.onDieComplete(returnDie)\n\t\t}\n\t\tthis.#DiceWorld.onRollComplete = () => {\n\t\t\t// trigger callback passing the roll results\n\t\t\tthis.onRollComplete(this.getRollResults())\n\t\t}\n\n\t\tthis.#DiceWorld.onDieRemoved = (rollId) => {\n\t\t\t// get die information from cache\n\t\t\tlet die = this.rollDiceData[rollId]\n\t\t\tconst collection = this.rollCollectionData[die.removeCollectionId]\n\t\t\tcollection.completedRolls++\n\n\t\t\t// remove this die from cache\n\t\t\tdelete this.rollDiceData[die.rollId]\n\n\t\t\t// remove this die from it's group rolls\n\t\t\tconst group = this.rollGroupData[die.groupId]\n\t\t\tdelete group.rolls[die.rollId]\n\n\t\t\t// parse the group value now that the die has been removed from data\n\t\t\tconst groupData = this.#parseGroup(die.groupId)\n\t\t\t// update the value and quantity values\n\t\t\tgroup.value = groupData.value\n\t\t\tgroup.qty = groupData.rollsArray.length\n\n\t\t\t// if all rolls are completed then resolve the collection promise - returning dice that were removed\n\t\t\tif(collection.completedRolls == collection.rolls.length) {\n\t\t\t\tcollection.resolve(Object.values(collection.rolls).map(({id, ...rest}) => rest))\n\t\t\t}\n\t\t\tconst {collectionId, id, removeCollectionId, meshName, ...returnDie} = die\n\t\t\tthis.onRemoveComplete(returnDie)\n\t\t}\n\n    // wait for both DiceWorld and DicePhysics to initialize\n\t\tawait Promise.all([this.#diceWorldPromise, this.#dicePhysicsPromise])\n\t\t// set up message channels between Dice World and Dice Physics\n\n\t\tthis.#connectWorld()\n\n\t\t// queue load of the theme defined in the config\n\t\tawait this.loadThemeQueue.push(() => this.loadTheme(this.config.theme))\n\n\t\t//TODO: this should probably return a promise\n\t\t// make this method chainable\n\t\treturn this\n  }\n\n\t// fetch the theme config and return a themeData object\n\tasync getThemeConfig(theme){\n\t\tconst basePath = `${this.config.origin}${this.config.assetPath}themes/${theme}`\n\t\tlet themeData\n\n\t\tif (theme === 'default'){\n\t\t\t// sensible defaults\n\t\t\tthemeData = {\n\t\t\t\tname: \"Default Colors\",\n\t\t\t\tmaterial: {\n\t\t\t\t\ttype: \"color\",\n\t\t\t\t\tdiffuseTexture: {\n\t\t\t\t\t\tlight: 'diffuse-light.png',\n\t\t\t\t\t\tdark: 'diffuse-dark.png'\n\t\t\t\t\t},\n\t\t\t\t\tdiffuseLevel: 1,\n\t\t\t\t\tbumpTexture: 'normal.png',\n\t\t\t\t\tbumpLevel: .5,\n\t\t\t\t\tspecularTexture: 'specular.jpg',\n\t\t\t\t\tspecularPower: 1\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// fetch the theme.config file\n\t\t\tthemeData = await fetch(`${basePath}/theme.config.json`).then(resp => {\n\t\t\t\tif(resp.ok) {\n\t\t\t\t\tconst contentType = resp.headers.get(\"content-type\")\n\t\t\t\t\tif (contentType && contentType.indexOf(\"application/json\") !== -1) {\n\t\t\t\t\t\treturn resp.json()\n\t\t\t\t\t} \n\t\t\t\t\telse if (resp.type && resp.type === 'basic') {\n\t\t\t\t\t\treturn resp.json()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// return resp\n\t\t\t\t\t\tthrow new Error(`Incorrect contentType: ${contentType}. Expected \"application/json\" or \"basic\"`)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`Unable to fetch config file for theme: '${theme}'. Request rejected with status ${resp.status}: ${resp.statusText}`)\n\t\t\t\t}\n\t\t\t}).catch(error => console.error(error))\n\t\t}\n\n\t\tlet meshFilePath = this.config.origin + this.config.assetPath + this.config.meshFile\n\t\tlet meshName = 'default'\n\t\tif(!themeData){\n\t\t\tthrow new Error(\"No theme config data to work with.\")\n\t\t}\n\t\tif(themeData.hasOwnProperty('meshFile')){\n\t\t\tmeshFilePath = `${basePath}/${themeData.meshFile}`\n\t\t\tif(!themeData.hasOwnProperty('meshName')) {\n\t\t\t\tconsole.warn('You should provide a meshName in your theme.config.json file')\n\t\t\t\t// fallback to fileName as meshName without extension\n\t\t\t\tmeshName = themeData.meshFile.replace(/(.*)\\..{2,4}$/,'$1')\n\t\t\t} else {\n\t\t\t\tmeshName = themeData.meshName\n\t\t\t}\n\t\t}\n\n\t\t// if diceAvailable is not specified then assume the default set of seven\n\t\tif(!themeData.hasOwnProperty('diceAvailable')){\n\t\t\tthemeData.diceAvailable = ['d4','d6','d8','d10','d12','d20','d100']\n\t\t}\n\n\t\tif(themeData.hasOwnProperty(\"extends\")){\n\t\t\tlet target = this.themesLoadedData[themeData.extends]\n\t\t\tif(!target){\n\t\t\t\ttarget = await this.loadTheme(themeData.extends).catch(error => console.error(error))\n\t\t\t}\n\t\t\tif(target){\n\t\t\t\tthemeData.diceInherited = [...(themeData.diceInherited || [])]\n\t\t\t\ttarget.diceAvailable.map(die => {\n\t\t\t\t\tthemeData.diceInherited[die] = target.systemName\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\n\t\tObject.assign(themeData,\n\t\t\t{\n\t\t\t\tbasePath,\n\t\t\t\tmeshFilePath,\n\t\t\t\tmeshName,\n\t\t\t\ttheme,\n\t\t\t}\n\t\t)\n\n\t\t// this.onThemeConfigLoaded(themeData)\n\n\t\treturn themeData\n\t}\n\n\tasync loadTheme(theme){\n\t\t// check the cache\n\t\tif(this.themesLoadedData[theme]) {\n\t\t\t// short circuit if theme has been previously loaded\n\t\t\t// console.log(`${theme} has already been loaded. Returning cache`)\n\t\t\treturn this.themesLoadedData[theme]\n\t\t}\n\t\t// console.log(`${theme} is loading ...`)\n\n\t\t// fetch and save the themeData for later\n\t\tconst themeConfig = this.themesLoadedData[theme] = await this.getThemeConfig(theme).catch(error => console.error(error))\n\t\tthis.onThemeConfigLoaded(themeConfig)\n\n\t\tif(!themeConfig) return\n\n\t\t// pass config onto DiceWorld to load - the theme loader needs 'scene' from DiceWorld\n\t\tawait this.#DiceWorld.loadTheme(themeConfig).catch(error => console.error(error))\n\n\t\tthis.onThemeLoaded(themeConfig)\n\n\t\treturn themeConfig\n\t}\n\n\t// TODO: use getter and setter\n\t// change config options\n\tasync updateConfig(options) {\n\t\tconst newConfig = {...this.config,...options}\n\t\t// console.log('newConfig', newConfig)\n\t\tconst config = await this.loadThemeQueue.push(() => this.loadTheme(newConfig.theme))\n\t\t// const themeData = config.at(-1) //get the last entry returned from the queue\n\n\t\tthis.config = newConfig\n\t\t// pass updates to DiceWorld\n\t\tthis.#DiceWorld.updateConfig(newConfig)\n\t\t// pass updates to PhysicsWorld\n\t\tthis.#DicePhysics.postMessage({\n\t\t\taction: 'updateConfig',\n\t\t\toptions: newConfig\n\t\t})\n\n\t\t// make this method chainable\n\t\treturn this\n\t}\n\n\tclear() {\n\t\t// reset indexes\n\t\tthis.#collectionIndex = 0\n\t\tthis.#groupIndex = 0\n\t\tthis.#rollIndex = 0\n\t\tthis.#idIndex = 0\n\t\t// reset internal data objects\n\t\tthis.rollCollectionData = {}\n\t\tthis.rollGroupData = {}\n\t\tthis.rollDiceData = {}\n\t\t// clear all rendered die bodies\n\t\tthis.#DiceWorld.clear()\n    // clear all physics die bodies\n    this.#DicePhysics.postMessage({action: \"clearDice\"})\n\n\t\t// make this method chainable\n\t\treturn this\n  }\n\n\thide() {\n\t\tthis.canvas.style.display = 'none'\n\n\t\t// make this method chainable\n\t\treturn this\n\t}\n\n\tshow() {\n\t\tthis.canvas.style.display = 'block'\n\n\t\t// make this method chainable\n\t\treturn this\n\t}\n\n\t// TODO: pass data with roll - such as roll name. Passed back at the end in the results\n\troll(notation, {theme = this.config.theme, themeColor = this.config.themeColor, newStartPoint = true} = {}) {\n\t\t// note: to add to a roll on screen use .add method\n\t\t// reset the offscreen worker and physics worker with each new roll\n\t\tthis.clear()\n\t\tconst collectionId = this.#collectionIndex++\n\t\t\n\t\tthis.rollCollectionData[collectionId] = new Collection({\n\t\t\tid: collectionId,\n\t\t\tnotation,\n\t\t\ttheme,\n\t\t\tthemeColor,\n\t\t\tnewStartPoint\n\t\t})\n\n\t\tconst parsedNotation = this.createNotationArray(notation, this.themesLoadedData[theme].diceAvailable)\n\t\tthis.#makeRoll(parsedNotation, collectionId)\n\n\t\t// returns a Promise that is resolved in onRollComplete\n\t\treturn this.rollCollectionData[collectionId].promise\n\t}\n\n  add(notation, {theme = this.config.theme, themeColor = this.config.themeColor, newStartPoint = true} = {}) {\n\n\t\tconst collectionId = this.#collectionIndex++\n\n\t\tthis.rollCollectionData[collectionId] = new Collection({\n\t\t\tid: collectionId,\n\t\t\tnotation,\n\t\t\ttheme,\n\t\t\tthemeColor,\n\t\t\tnewStartPoint\n\t\t})\n\t\t\n\t\tconst parsedNotation = this.createNotationArray(notation, this.themesLoadedData[theme].diceAvailable)\n\t\tthis.#makeRoll(parsedNotation, collectionId)\n\n\t\t// returns a Promise that is resolved in onRollComplete\n\t\treturn this.rollCollectionData[collectionId].promise\n  }\n\n\treroll(notation, {remove = false, hide = false, newStartPoint = true} = {}) {\n\t\t// TODO: add hide if you want to keep the die result for an external parser\n\n\t\t// ensure notation is an array\n\t\tconst rollArray = Array.isArray(notation) ? notation : [notation]\n\n\t\t// destructure out 'sides', 'theme', 'groupId', 'rollId' - basically just getting rid of value - could do ({value, ...rest}) => rest\n\t\tconst cleanNotation = rollArray.map(({value, ...rest}) => rest)\n\n\t\tif(remove === true){\n\t\t\tthis.remove(cleanNotation, {hide})\n\t\t}\n\n\t\t// .add will return a promise that will then be returned here\n\t\treturn this.add(cleanNotation, {newStartPoint})\n\t}\n\n\tremove(notation, {hide = false} = {}) {\n\t\t// ensure notation is an array\n\t\tconst rollArray = Array.isArray(notation) ? notation : [notation]\n\n\t\tconst collectionId = this.#collectionIndex++\n\n\t\tthis.rollCollectionData[collectionId] = new Collection({\n\t\t\tid: collectionId,\n\t\t\tnotation,\n\t\t\trolls: rollArray,\n\t\t})\n\n\t\t// loop through each die to be removed\n\t\trollArray.map(die => {\n\t\t\t// add the collectionId to the die so it can be looked up in the callback\n\t\t\tthis.rollDiceData[die.rollId].removeCollectionId = collectionId\n\t\t\t// assign the id for this die from our cache - required for removal\n\t\t\t// die.id = this.rollDiceData[die.rollId].id - note: can appear in async roll result data if attached to die object\n\t\t\tlet id = this.rollDiceData[die.rollId].id\n\t\t\t// remove the die from the render - don't like having to pass two ids. rollId is passed over just so it can be passed back for callback\n\t\t\tthis.#DiceWorld.remove({id,rollId: die.rollId})\n\t\t\t// remove the die from the physics bodies\n\t\t\tthis.#DicePhysics.postMessage({action: \"removeDie\", id })\n\t\t})\n\n\t\treturn this.rollCollectionData[collectionId].promise\n\t}\n\n\t// used by both .add and .roll - .roll clears the box and .add does not\n\tasync #makeRoll(parsedNotation, collectionId){\n\n\t\tconst collection = this.rollCollectionData[collectionId]\n\t\tlet newStartPoint = collection.newStartPoint\n\n\t\t// loop through the number of dice in the group and roll each one\n\t\tparsedNotation.forEach(async notation => {\n\t\t\tif(!notation.sides) {\n\t\t\t\tthrow new Error(\"Improper dice notation or unable to parse notation\")\n\t\t\t}\n\t\t\tconst theme = notation.theme || collection.theme || this.config.theme\n\t\t\tconst themeColor = notation.themeColor || collection.themeColor || this.config.themeColor\n\t\t\tconst rolls = {}\n\t\t\tconst hasGroupId = notation.groupId !== undefined\n\t\t\tlet index\n\n\t\t\t\n\t\t\t// load the theme, will be short circuited if previously loaded\n\t\t\tconst loadTheme = () => this.loadTheme(theme)\n\t\t\tawait this.loadThemeQueue.push(loadTheme)\n\n\t\t\tconst {meshName, diceAvailable, diceInherited = {}, material: { type: materialType }} = this.themesLoadedData[theme]\n\t\t\tconst diceExtra = Object.keys(diceInherited)\n\n\t\t\tlet colorSuffix = '', color\n\n\t\t\tif(materialType === \"color\") {\n\t\t\t\tcolor = hexToRGB(themeColor)\n\t\t\t\t// dat.gui uses HSB(a.k.a HSV) brightness greater than .5 and saturation less than .5\n\t\t\t\tcolorSuffix = ((color.r*0.299 + color.g*0.587 + color.b*0.114) > 175) ? '_dark' : '_light'\n\t\t\t}\n\n\t\t\t// TODO: should I validate that added dice are only joining groups of the same \"sides\" value - e.g.: d6's can only be added to groups when sides: 6? Probably.\n\t\t\tfor (var i = 0, len = notation.qty; i < len; i++) {\n\t\t\t\t// id's start at zero and zero can be falsy, so we check for undefined\n\t\t\t\tlet rollId = notation.rollId !== undefined ? notation.rollId : this.#rollIndex++\n\t\t\t\tlet id = notation.id !== undefined ? notation.id : this.#idIndex++\n\t\t\t\tindex = hasGroupId ? notation.groupId : this.#groupIndex\n\n\t\t\t\tconst dieType = Number.isInteger(notation.sides) ? `d${notation.sides}` : notation.sides\n\n\t\t\t\tnotation.sides = dieType\n\n\t\t\t\tconst roll = {\n\t\t\t\t\tsides: dieType,\n\t\t\t\t\tgroupId: index,\n\t\t\t\t\tcollectionId: collection.id,\n\t\t\t\t\trollId,\n\t\t\t\t\tid,\n\t\t\t\t\ttheme,\n\t\t\t\t\tthemeColor,\n\t\t\t\t\tmeshName\n\t\t\t\t}\n\n\t\t\t\trolls[rollId] = roll\n\t\t\t\tthis.rollDiceData[rollId] = roll\n\t\t\t\tcollection.rolls.push(this.rollDiceData[rollId])\n\n\t\t\t\t// TODO: eliminate the 'd' for more flexible naming such as 'fate' - ensure numbers are strings\n\t\t\t\tif (roll.sides === 'fate' && (!diceAvailable.includes(roll.sides) && !diceExtra.includes(roll.sides))){\n\t\t\t\t\tconsole.warn(`fate die unavailable in '${theme}' theme. Using fallback.`)\n\t\t\t\t\tconst min = -1\n\t\t\t\t\tconst max = 1\n\t\t\t\t\troll.value = Random.range(min,max)\n\t\t\t\t\tthis.#DiceWorld.addNonDie(roll)\n\t\t\t\t} \n\t\t\t\telse if(this.config.suspendSimulation || (!diceAvailable.includes(roll.sides) && !diceExtra.includes(roll.sides))){\n\t\t\t\t\t// check if the requested roll is available in the current theme, if not then use crypto fallback\n\t\t\t\t\tconsole.warn(this.config.suspendSimulation ? \"3D simulation suspended. Using fallback.\" : `${roll.sides} die unavailable in '${theme}' theme. Using fallback.`)\n\t\t\t\t\troll.value = Random.range(1, roll.sides)\n\t\t\t\t\tthis.#DiceWorld.addNonDie(roll)\n\t\t\t\t} \n\t\t\t\telse {\n\t\t\t\t\tlet parentTheme\n\t\t\t\t\tif(diceExtra.includes(roll.sides)) {\n\t\t\t\t\t\tconst parentThemeName = diceInherited[roll.sides]\n\t\t\t\t\t\tparentTheme = this.themesLoadedData[parentThemeName]\n\t\t\t\t\t}\n\t\t\t\t\tthis.#DiceWorld.add({\n\t\t\t\t\t\t...roll,\n\t\t\t\t\t\tnewStartPoint,\n\t\t\t\t\t\ttheme: parentTheme?.systemName || theme,\n\t\t\t\t\t\tmeshName: parentTheme?.meshName || meshName,\n\t\t\t\t\t\tcolorSuffix\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// turn flag off\n\t\t\t\tnewStartPoint = false\n\t\t\t}\n\n\t\t\tif(hasGroupId) {\n\t\t\t\tObject.assign(this.rollGroupData[index].rolls, rolls)\n\t\t\t} else {\n\t\t\t\t// save this roll group for later\n\t\t\t\tnotation.rolls = rolls\n\t\t\t\tnotation.id = index\n\t\t\t\tthis.rollGroupData[index] = notation\n\t\t\t\t++this.#groupIndex\n\t\t\t}\n\t\t})\n\t}\n\n\t// accepts simple notations eg: 4d6\n\t// accepts array of notations eg: ['4d6','2d10']\n\t// accepts object {sides:int, qty:int}\n\t// accepts array of objects eg: [{sides:int, qty:int, mods:[]}]\n\tcreateNotationArray(input, diceAvailable){\n\t\tconst notation = Array.isArray( input ) ? input : [ input ]\n\t\tlet parsedNotation = []\n\n\n\t\tconst verifyObject = ( object ) => {\n\t\t\tif(!object.hasOwnProperty('qty')) {\n\t\t\t\tobject.qty = 1\n\t\t\t}\n\t\t\tif ( object.hasOwnProperty('sides') ) {\n\t\t\t\treturn true\n\t\t\t} else {\n\t\t\t\tconst err = \"Roll notation is missing sides\"\n\t\t\t\tthrow new Error(err);\n\t\t\t}\n\t\t}\n\n\t\tconst incrementId = (key) => {\n\t\t\tkey = key.toString()\n\t\t\tlet splitKey = key.split(\".\")\n\t\t\tif(splitKey[1]){\n\t\t\t\tsplitKey[1] = parseInt(splitKey[1]) + 1\n\t\t\t} else {\n\t\t\t\tsplitKey[1] = 1\n\t\t\t}\n\t\t\treturn splitKey[0] + \".\" + splitKey[1]\n\t\t}\n\n\t\t// verify that the rollId is unique. If not then increment it by .1\n\t\t// rollIds become keys in the rollDiceData object, so they must be unique or they will overwrite another entry\n\t\tconst verifyRollId = ( object ) => {\n\t\t\tif(object.hasOwnProperty('rollId')){\n\t\t\t\tif(this.rollDiceData.hasOwnProperty(object.rollId)){\n\t\t\t\t\tobject.rollId = incrementId(object.rollId)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// notation is an array of strings or objects\n\t\tnotation.forEach(roll => {\n\t\t\t// console.log('roll', roll)\n\t\t\t// if notation is an array of strings\n\t\t\tif ( typeof roll === 'string' ) {\n\t\t\t\tparsedNotation.push( this.parse( roll, diceAvailable ) )\n\t\t\t} else if ( typeof notation === 'object' ) {\n\t\t\t\tverifyRollId( roll )\n\t\t\t\tverifyObject( roll )  && parsedNotation.push( roll )\n\t\t\t}\n\t\t})\n\n\t\treturn parsedNotation\n\t}\n\n  // parse text die notation such as 2d10+3 => {number:2, type:6, modifier:3}\n  // taken from https://github.com/ChapelR/dice-notation\n  parse(notation, diceAvailable) {\n    const diceNotation = /(\\d+)([dD]{1}\\d+)(.*)$/i\n\t\tconst percentNotation = /(\\d+)[dD]([0%]+)(.*)$/i\n\t\tconst fudgeNotation = /(\\d+)[dD](f+[ate]*)(.*)$/i\n\t\t// const customNotation = /(\\d+)[dD](.*)([+-])/i\n\t\tconst customNotation = /(\\d+)[dD]([\\d\\w]+)([+-]{0,1}\\d+)?/i\n    const modifier = /([+-])(\\d+)/\n    const cleanNotation = notation.trim().replace(/\\s+/g, '')\n    const validNumber = (n, err) => {\n      n = Number(n)\n      if (Number.isNaN(n) || !Number.isInteger(n) || n < 1) {\n        throw new Error(err);\n      }\n      return n\n    }\n\n\t\t// match percentNotation before diceNotation\n    const roll = cleanNotation.match(percentNotation) || cleanNotation.match(diceNotation) || cleanNotation.match(fudgeNotation) || cleanNotation.match(customNotation);\n\n\t\tlet mod = 0;\n    const msg = 'Invalid notation: ' + notation + '';\n\n    if (!roll || !roll.length || roll.length < 3) {\n      throw new Error(msg);\n    }\n    if (roll[3] && modifier.test(roll[3])) {\n      const modParts = roll[3].match(modifier);\n      let basicMod = validNumber(modParts[2], msg);\n      if (modParts[1].trim() === '-') {\n        basicMod *= -1;\n      }\n      mod = basicMod;\n    }\n\n\t\tconst returnObj = {\n\t\t\tqty : validNumber(roll[1], msg),\n      modifier: mod,\n\t\t}\n\n\t\tif(cleanNotation.match(percentNotation)){\n\t\t\treturnObj.sides = '100' // as string, not number\n\t\t} else if(cleanNotation.match(fudgeNotation)){\n\t\t\treturnObj.sides = 'fate' // force lowercase\n\t\t} else if(diceAvailable.includes(cleanNotation.match(customNotation)[2])){\n\t\t\treturnObj.sides = roll[2] // dice type instead of number\n\t\t} else {\n\t\t\treturnObj.sides = roll[2];\n\t\t}\n\n    return returnObj\n  }\n\n\t#parseGroup(groupId) {\n\t\t// console.log('groupId', groupId)\n\t\tconst rollGroup = this.rollGroupData[groupId]\n\t\t// turn object into an array\n\t\tconst rollsArray = Object.values(rollGroup.rolls).map(({collectionId, id, meshName, ...rest}) => rest)\n\t\t// add up the values\n\t\t// some dice may still be rolling, should this be a promise?\n\t\t// if dice are still rolling in the group then the value is undefined - hence the isNaN check\n\t\tlet value = rollsArray.reduce((val,roll) => {\n\t\t\tconst rollVal = isNaN(roll.value) ? 0 : roll.value\n\t\t\treturn val + rollVal\n\t\t},0)\n\t\t// add the modifier\n\t\tvalue += rollGroup.modifier ? rollGroup.modifier : 0\n\t\t// return the value and the rollsArray\n\t\treturn {value, rollsArray}\n\t}\n\n\tgetRollResults(){\n\t\t// loop through each roll group\n\t\treturn Object.entries(this.rollGroupData).map(([key,val]) => {\n\t\t\t// parse the group data to get the value and the rolls as an array\n\t\t\tconst groupData = this.#parseGroup(key)\n\t\t\t// set the value for this roll group in this.rollGroupData\n\t\t\tval.value = groupData.value\n\t\t\t// set the qty equal to the number of rolls - this can be changed by rerolls and removals\n\t\t\tval.qty = groupData.rollsArray.length\n\t\t\t// copy the group that will be put into the return object\n\t\t\tconst groupCopy = {...val}\n\t\t\t// replace the rolls object with a rolls array\n\t\t\tgroupCopy.rolls = groupData.rollsArray\n\t\t\t// return the groupCopy - note: we never return this.rollGroupData\n\t\t\treturn groupCopy\n\t\t})\n\t}\n}\n\nclass Collection{\n\tconstructor(options){\n\t\tObject.assign(this,options)\n\t\tthis.rolls = options.rolls || []\n\t\tthis.completedRolls = 0\n\t\tconst that = this\n\t\tthis.promise = new Promise((resolve,reject) => {\n\t\t\tthat.resolve = resolve\n\t\t\tthat.reject = reject\n\t\t})\n\t}\n}\n\nexport default WorldFacade"],"names":["H","o","f","x","u","e","K","a","z","t","k","_","Q","ll","P","bl","B","g","w","M","Jl","c","JSON","parse","stringify","q","_classCallCheck","_createClass","key","value","b","window","crypto","msCrypto","l","Uint32Array","getRandomValues","Math","pow","floor","this","Rl","slice","startsWith","length","_toConsumableArray","map","X","join","d","r","parseInt","ul","id","concat","Date","now","enableShadows","shadowTransparency","lightIntensity","delay","scale","theme","themeColor","offscreen","assetPath","origin","location","meshFile","suspendSimulation","pl","arguments","undefined","p","N","Error","onDieComplete","onRollComplete","onRemoveComplete","onThemeConfigLoaded","onThemeLoaded","G","_objectWithoutProperties","_excluded","config","_objectSpread","noop","canvas","selector","document","querySelector","nodeName","toLowerCase","createElement","appendChild","cl","loadThemeQueue","dedupe","Z","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","m","V","wrap","_context","prev","next","shift","t0","t1","sent","push","call","abrupt","stop","apply","finally","queue","flush","Promise","resolve","Vl","_this","cancelAnimationFrame","requestAnimationFrame","Wl","W","resize","width","clientWidth","height","clientHeight","postMessage","action","addEventListener","_init","_callee2","_this2","_context2","y","resizeWorld","onRollResult","rollDiceData","rollId","rollGroupData","groupId","rollCollectionData","collectionId","rolls","completedRolls","Object","values","_ref2","meshName","_excluded2","_excluded3","getRollResults","onDieRemoved","removeCollectionId","qty","rollsArray","_ref3","_excluded4","R","_excluded5","all","loadTheme","_getThemeConfig","_callee3","_context3","name","material","type","diffuseTexture","light","dark","diffuseLevel","bumpTexture","bumpLevel","specularTexture","specularPower","fetch","then","ok","headers","get","indexOf","json","status","statusText","catch","console","error","hasOwnProperty","warn","replace","diceAvailable","themesLoadedData","extends","diceInherited","systemName","assign","basePath","meshFilePath","_x","_loadTheme","_callee4","_context4","getThemeConfig","_x2","_updateConfig","_callee5","_this3","_context5","updateConfig","options","_x3","i","clear","style","display","_ref4","_ref4$theme","_ref4$themeColor","_ref4$newStartPoint","newStartPoint","S","T","notation","createNotationArray","promise","_ref5","_ref5$theme","_ref5$themeColor","_ref5$newStartPoint","_ref6","_ref6$remove","remove","_ref6$hide","hide","_ref6$newStartPoint","Array","isArray","_ref7","_excluded6","add","_this4","_this5","Y","toString","split","forEach","trim","h","F","Number","isNaN","isInteger","match","v","s","test","L","modifier","sides","includes","_this6","entries","_ref9","_ref10","_slicedToArray","WeakMap","WeakSet","_ref11","_callee6","_l","_this7","_context6","default","onInitComplete","_this8","Gl","onmessage","data","MessageChannel","connect","port1","port2","_ref12","_callee8","_this9","_context8","_ref13","_callee7","_this9$themesLoadedDa","_this9$themesLoadedDa2","j","D","C","dl","U","Xl","A","J","_n","_I","_context7","keys","range","addNonDie","n","I","colorSuffix","_x6","_x4","_x5","_ref14","_excluded7","reduce","reject"],"sourceRoot":""}